<!doctype html>
<html>
  <head>
  <meta charset="utf-8">
  <style>
    html, body {
      padding: 0;
      background: white;
      margin: 0;
      height:  {{ height }}px;
      width: {{ width }}px;
    }
    svg {
      position: absolute;
      top: 0;
      left: 0;
    }
  </style>
  <script src="/svg-injector.min.js"></script>
  <title>Test</title>
  </head>
  <body>
    <img src="{{{layerOneImageUrl}}}" id="one">
    <img src="{{{layerTwoImageUrl}}}" id="two">
    <img src="{{{layerThreeImageUrl}}}" id="three">
    <script>
      var one = document.querySelector('#one')
      var two = document.querySelector('#two')
      var three = document.querySelector('#three')
      var toA = function(list) { return Array.prototype.slice.call(list, 0) }
      var rotationToColorsMapping = {{{rotationToColorsMapping}}}
      var svgLayerIds = {{{svgLayerIds}}}
      var layers = {{{layers}}}

      var setSvgColors = function(svgEl, layer) {
        var colorPalette = layer.colorPalette
        var layersToColorsMap = rotationToColorsMapping[layer.paletteRotation]
        svgLayerIds.forEach(function(id) {
          var color = colorPalette[layersToColorsMap[id]]
          toA(svgEl.querySelectorAll('#' + id + ' *')).forEach(function(el) {
            el.style.fill = color
          })
        })
      }

      var replaceSvgImageWithText = function(imgEl, layer, height, width) {
        var opts = {
          each: function(svgEl) {
            if (typeof svgEl !== 'object') { return null }
            svgEl.style.height = height + 'px'
            svgEl.style.width = width + 'px'
            svgEl.style.margin  = '0';
            svgEl.style.padding = '0';
            svgEl.style.display = 'block';
            setSvgColors(svgEl, layer)
            return svgEl
          },
          evalScripts: 'never'
        }
        SVGInjector(imgEl, opts)
      }

      window.numEnabledLayers = layers.reduce(function(retVal, layer) {
        return retVal + (layer.isEnabled ? 1 : 0)
      }, 0)

      var imgNodes = [one, two, three]

      layers.filter(function(layer) { return !layer.isEnabled })
            .forEach(function(layer) {
              var imgNode = imgNodes[layer.order]
              imgNode.parentNode.removeChild(imgNode)
            })

      layers.filter(function(layer) { return layer.isEnabled })
            .forEach(function(layer) {
              replaceSvgImageWithText(imgNodes[layer.order], layer, {{height}}, {{width}})
            })
    </script>
  </body>
</html>
